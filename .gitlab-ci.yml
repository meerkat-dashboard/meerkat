stages:
  - build
  - test

# Since go binary, built on Alpine, cannot be run on Debian [read more*]
# and Cypress container is based on debian image, [read more**]
# we stick to using debian images, where necessary, so everything can work together.
#
# *  https://stackoverflow.com/questions/36279253/go-compiled-binary-wont-run-in-an-alpine-docker-container-on-ubuntu-host#answers-header
# ** https://github.com/cypress-io/cypress-docker-images/issues/110
build-backend:
  stage: build
  image: golang:buster
  script:
    - cd backend
    - go build
  artifacts:
    paths:
      - backend/meerkat

build-frontend:
  stage: build
  image: node:lts
  script:
    - cd frontend
    - npm ci
    - npm run prod
  artifacts:
    paths:
      - frontend/dist/

test-e2e:
  stage: test
  tags:
    - sol1-hq
  image: cypress/browsers:node12.14.1-chrome85-ff81
  script:
    - |
      cat > /tmp/meerkat.toml <<END_CONFIG
        HTTPAddr = "0.0.0.0:8585"
        IcingaURL = "$ICINGA_URL"
        IcingaUsername = "$ICINGA_USERNAME"
        IcingaPassword = "$ICINGA_PASSWORD"
        IcingaInsecureTLS = true
      END_CONFIG
    - cd backend
    - ./meerkat -config /tmp/meerkat.toml &
    - MEERKAT_PID=$!
    - npx cypress run --browser chrome
    - kill $MEERKAT_PID
