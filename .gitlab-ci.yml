stages:
  - build
  - test

# Since go binary, built on Alpine, cannot be run on Debian [read more*]
# and Cypress container is based on debian image, [read more**]
# we stick to using debian images, where necessary, so everything can work together.
#
# *  https://stackoverflow.com/questions/36279253/go-compiled-binary-wont-run-in-an-alpine-docker-container-on-ubuntu-host#answers-header
# ** https://github.com/cypress-io/cypress-docker-images/issues/110
build-backend:
  stage: build
  image: golang:buster
  script:
    - cd backend
    - go build
  artifacts:
    paths:
      - backend/meerkat

build-frontend:
  stage: build
  image: node:lts
  script:
    - cd frontend
    - npm ci
    - npm run prod
  artifacts:
    paths:
      - frontend/dist/

test-e2e:
  stage: test
  tags:
    - sol1-hq
  image: cypress/browsers:node12.14.1-chrome85-ff81
  script:
    - |
      cat > meerkat.toml <<EOCONFIG
        HTTPAddr = "0.0.0.0:8585"
        IcingaURL = "$ICINGA_URL"
        IcingaUsername = "$ICINGA_USERNAME"
        IcingaPassword = "$ICINGA_PASSWORD"
        IcingaInsecureTLS = true
      EOCONFIG
    - |
      cat > settings.json <<EOSETTINGS
      {"appName":"Meerkat for fun & profits"}
      EOSETTINGS
    - cp $CI_PROJECT_DIR/backend/meerkat .
    - ./meerkat &
    - MEERKAT_PID=$!
    - npx cypress run --browser chrome
    - kill $MEERKAT_PID

build-docker:
  image: docker:20
  tags:
    - dind
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
  script:
    # Default branch leaves tag empty (= latest tag)
    # All other branches are tagged with the escaped branch name (commit ref slug)
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
    - docker push "$CI_REGISTRY_IMAGE${tag}"
  rules:
    # But only run on the default branch for now (meaning the conditional tag script above is redundant)
    - if: $CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH 
    # And only try to build if we actually have a Dockerfile
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile